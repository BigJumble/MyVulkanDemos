#version 460
#extension GL_EXT_ray_tracing : require

layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 0, binding = 1, rgba8) uniform image2D outputImage;

layout(set = 0, binding = 2) uniform Camera {
    mat4 viewInverse;
    mat4 projInverse;
} camera;

layout(location = 0) rayPayloadEXT vec3 hitColor;

void main() {
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;
    
    // Generate ray from camera
    vec4 origin = camera.viewInverse * vec4(0, 0, 0, 1);
    vec4 target = camera.projInverse * vec4(d.x, d.y, 1, 1);
    vec4 direction = camera.viewInverse * vec4(normalize(target.xyz), 0);
    
    float tmin = 0.001;
    float tmax = 10000.0;
    
    // Trace ray
    traceRayEXT(
        topLevelAS,              // Acceleration structure
        gl_RayFlagsOpaqueEXT,    // Ray flags
        0xFF,                    // Cull mask
        0,                       // SBT ray type offset
        0,                       // SBT stride
        0,                       // Miss index
        origin.xyz,              // Ray origin
        tmin,                    // Min distance
        direction.xyz,           // Ray direction
        tmax,                    // Max distance
        0                        // Payload location
    );
    
    // Write result to output image
    imageStore(outputImage, ivec2(gl_LaunchIDEXT.xy), vec4(hitColor, 1.0));
}

